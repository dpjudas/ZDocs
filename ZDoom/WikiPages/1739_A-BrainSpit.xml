<page xmlns="http://www.mediawiki.org/xml/export-0.11/">
  <title>A BrainSpit</title>
  <ns>0</ns>
  <id>1739</id>
  <revision>
    <id>52435</id>
    <parentid>47215</parentid>
    <timestamp>2024-04-13T21:26:18Z</timestamp>
    <contributor>
      <username>Jekyll Grim Payne</username>
      <id>2175</id>
    </contributor>
    <origin>52435</origin>
    <model>wikitext</model>
    <format>text/x-wiki</format>
    <text bytes="2398" sha1="os9l2ksm092oa5eod4nfea25ealragt" xml:space="preserve">{{DISPLAYTITLE:A_BrainSpit}}
{{doomwiki|A_BrainSpit}}

'''{{class|Actor}}'''

{{c|void '''A_BrainSpit''' (class&lt;Actor&gt; spawntype }}={{c| null)}}


Spits one [[Classes:SpawnShot|boss cube]] for the Doom2 end boss sequence.

You can also optionally specify a parameter, which is the actor to spawn instead of the default boss cube.

The sound made when launching the projectile is the attack sound of the actor using A_BrainSpit (or "brain/spit" if no attack sound is defined).

== [[ZScript]] definition ==
{{ZScriptDefinitionNote|actors/doom/bossbrain.zs#L221}}
&lt;syntaxhighlight lang="csharp"&gt;
	void A_BrainSpit(class&lt;Actor&gt; spawntype = null)
	{
		SpotState spstate = Level.GetSpotState();
		Actor targ;
		Actor spit;
		bool isdefault = false;

		// shoot a cube at current target
		targ = spstate.GetNextInList("BossTarget", G_SkillPropertyInt(SKILLP_EasyBossBrain));

		if (targ)
		{
			if (spawntype == null) 
			{
				spawntype = "SpawnShot";
				isdefault = true;
			}

			// spawn brain missile
			spit = SpawnMissile (targ, spawntype);

			if (spit)
			{
				// Boss cubes should move freely to their destination so it's
				// probably best to disable all collision detection for them.
				spit.bNoInteraction = spit.bNoClip;
		
				spit.target = targ;
				spit.master = self;
				// [RH] Do this correctly for any trajectory. Doom would divide by 0
				// if the target had the same y coordinate as the spitter.
				if (spit.Vel.xy == (0, 0))
				{
					spit.special2 = 0;
				}
				else if (abs(spit.Vel.y) &gt; abs(spit.Vel.x))
				{
					spit.special2 = int((targ.pos.y - pos.y) / spit.Vel.y);
				}
				else
				{
					spit.special2 = int((targ.pos.x - pos.x) / spit.Vel.x);
				}
				// [GZ] Calculates when the projectile will have reached destination
				spit.special2 += level.maptime;
				spit.bBossCube = true;
			}

			if (!isdefault)
			{
				A_StartSound(self.AttackSound, CHAN_WEAPON, CHANF_DEFAULT, 1., ATTN_NONE);
			}
			else
			{
				// compatibility fallback
				A_StartSound("brain/spit", CHAN_WEAPON, CHANF_DEFAULT, 1., ATTN_NONE);
			}
		}
	}&lt;/syntaxhighlight&gt;

== Examples ==
This example is taken from Doom's [[Classes:BossEye|Icon of Sin]]

  See:
    SSWV A 181 [[A_BrainAwake]];
    SSWV A 150 [[A_BrainSpit]]; {{comment|See [[Classes:SpawnShot|SpawnShot]]}}
    Wait;

{{DEFAULTSORT:BrainSpit}}[[category:Decorate Classic attack functions]][[Category:Icon of Sin]]</text>
    <sha1>os9l2ksm092oa5eod4nfea25ealragt</sha1>
  </revision>
</page>