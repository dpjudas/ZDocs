<page xmlns="http://www.mediawiki.org/xml/export-0.11/">
  <title>WorldRailgunPreFired</title>
  <ns>0</ns>
  <id>10014</id>
  <revision>
    <id>54087</id>
    <parentid>54079</parentid>
    <timestamp>2024-12-23T12:28:55Z</timestamp>
    <contributor>
      <username>Jekyll Grim Payne</username>
      <id>2175</id>
    </contributor>
    <comment>/* Usage */</comment>
    <origin>54087</origin>
    <model>wikitext</model>
    <format>text/x-wiki</format>
    <text bytes="3914" sha1="73j43frnf67ndpkpy6itgek4g5yrjrb" xml:space="preserve">'''{{class|StaticEventHandler}}'''

{{c|bool '''WorldRailgunPreFired''' (WorldEvent ''e'')}} {{new|4.14.0}}

== Usage ==
An [[Events and handlers|event handler]] virtual function that is called before a railgun is fired in the level. This event can be used to block railgun attacks from happening and potentially replace them with something else, such as [[projectile|projectiles]].

'''Note:''' This event is only triggered by rail attacks, i.e. attacks fired by [[RailAttack|{{c|RailAttack()}}]] or its derivatives. It is NOT triggered by "bullet" [[hitscan]] attacks such as [[LineAttack (ZScript)|{{c|LineAttack()}}]] or any of its derivatives (for that see [[WorldHitscanPreFired|{{c|'''World''Hitscan''PreFired'''}}]]). Please note that internally "bullet" and "railgun" attacks, while technically both hitscans, are handled by different functions and have a few special, different behaviors tied to them.

=== Passed values ===
This event gets a pointer to the {{struct|WorldEvent}} struct, and can read certain fields from it preceding the value with &lt;code&gt;e.&lt;/code&gt;.
*{{c|Actor '''thing'''}}
:A pointer to the actor who fired the attack.
*{{c|angle '''AttackAngle'''}}
:The ''absolute'' horizontal angle offset at which the attack was fired, as passed from the attack function. To convert this to a ''relative'' angle, subtract &lt;code&gt;e.thing.angle&lt;/code&gt; from this value.
*{{c|angle '''AttackPitch'''}}
:The vertical angle offset at which the attack was fired, as passed from the attack function.
*{{c|double '''AttackDistance'''}}
:The maximum range of the the attack, as passed from the attack function. For reference, player attacks by default use {{const|PLAYERMISSILERANGE}} (8192) and monster attacks use {{const|MISSILERANGE}} (2048), but all hitscan and railgun functions allow specifying a custom distance.
*{{c|int '''damage'''}}
:The damage the hitscan attack should deal. Note, this is the value ''after'' all randomization has been applied to it by the function, if any. (For example, by default {{c|[[A_FireBullets]]}} multiplies its damage by {{c|random(1, 3)}}.)
*{{c|Name '''damageType'''}}
:The [[damage type]] applied to the attack (either through its arguments or a custom [[puff]]).
*{{c|class&lt;Actor&gt; '''AttackPuffType'''}}
:The [[puff]] class used by the attack. Note that with railgun attacks the puffs are usually invisible, but they still spawn and are used to handle [[damage types]] and other special conditions. (See [[Puff#Puff_usage_and_behavior|Puff usage and behavior]] for details.)
*{{c|double '''AttackZ'''}}
:Vertical offset of the attack from the shooter's origin. This is similar to the {{c|spawnofs_z}} argument of {{c|[[A_CustomRailgun]]}}.
*{{c|double '''AttackOffsetSide'''}}
:Side offset of the attack from the shooter's origin. This is similar to the {{c|spawnofs_xy}} argument of {{c|[[A_CustomRailgun]]}}.
*{{c|FRailParams '''RailParams'''}}
:A pointer to the {{struct|FRailParams|'''FRailParams''' struct}} transferred from the initial function call. All relevant data can also be read from this struct.

{{note|Since this function gets access to the {{struct|FRailParams|FRailParams struct}}, which ''also'' contains data on the railgun attack, some of the data is duplicated in this event. For example, you can check the damage that would be dealt by the railgun attack both with &lt;code&gt;e.damage&lt;/code&gt; and &lt;code&gt;e.RailParams.damage&lt;/code&gt;, and they will contain the same value. Same goes for several other fields.}}

=== Return value ===
*''bool'' â€” returning &lt;code&gt;true&lt;/code&gt; will block the attack from happening (note, this will not prevent anything else that might normally be tied to the attack, such as ammo consumption, sounds, etc.). By default returns &lt;code&gt;false&lt;/code&gt;.

== Examples ==
{{noexamples}}

== See also ==
* [[WorldRailgunFired]]
* [[WorldHitscanPreFired]]
* [[Events and handlers]]

[[Category:ZScript]]
[[Category:Event handlers]]</text>
    <sha1>73j43frnf67ndpkpy6itgek4g5yrjrb</sha1>
  </revision>
</page>