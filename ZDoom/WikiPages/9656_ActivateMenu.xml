<page xmlns="http://www.mediawiki.org/xml/export-0.11/">
  <title>ActivateMenu</title>
  <ns>0</ns>
  <id>9656</id>
  <revision>
    <id>49881</id>
    <timestamp>2022-11-23T05:08:53Z</timestamp>
    <contributor>
      <username>Boondorl</username>
      <id>2606</id>
    </contributor>
    <comment>Created page with "{{ZScriptNote}}  '''[[Classes:Menu|Menu]]'''  native void '''ActivateMenu'''()  == Usage == When called on a menu object, sets it as the currently active menu. This can be use..."</comment>
    <origin>49881</origin>
    <model>wikitext</model>
    <format>text/x-wiki</format>
    <text bytes="1136" sha1="i8t78i5nwl48lqkcfw7sefz9oz4pg7t" xml:space="preserve">{{ZScriptNote}}

'''[[Classes:Menu|Menu]]'''

native void '''ActivateMenu'''()

== Usage ==
When called on a menu object, sets it as the currently active menu. This can be used to get around the issue with '''[[SetMenu]]'''() where menus not defined in MENUDEF have to inherit from GenericMenu. Note that the menu's '''Init'''() function won't be called and must be done manually if that's desired. Any sort of auto activation behavior will not work either. For special menus that require a parameter, this won't be able to set it. This is best used for temporary menus such as those that capture input to send back to another menu.

== Examples ==
 // From OptionMenuItemControlBase, an option menu item designed to bind commands to an input
 override bool Activate()
 {
     Menu.MenuSound("menu/choose");
     mWaiting = true;
 
     let input = new("EnterKey"); // Create the EnterKey menu, a menu designed for reading an input
     input.Init(Menu.GetCurrentMenu(), self); // Call its custom '''Init'''() method
     input.ActivateMenu(); // Set it as the current menu
 
     return true;
 }

[[Category:ZScript]]
[[Category:Menu]]</text>
    <sha1>i8t78i5nwl48lqkcfw7sefz9oz4pg7t</sha1>
  </revision>
</page>