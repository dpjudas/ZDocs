<page xmlns="http://www.mediawiki.org/xml/export-0.11/">
  <title>CheckClass</title>
  <ns>0</ns>
  <id>7755</id>
  <revision>
    <id>48869</id>
    <parentid>46940</parentid>
    <timestamp>2021-12-18T07:10:11Z</timestamp>
    <contributor>
      <username>Blue Shadow</username>
      <id>2021</id>
    </contributor>
    <minor />
    <comment>switch {{WarnDeprecated}} to {{DecorateNote}}</comment>
    <origin>48869</origin>
    <model>wikitext</model>
    <format>text/x-wiki</format>
    <text bytes="2367" sha1="pclhxxrnalrg6t65uukj89k5p9cf9kj" xml:space="preserve">__NOTOC__
bool '''CheckClass''' (string ''classname'' [, int ''ptr_select'' [, bool ''match_superclass'']])

{{DecorateNote|the {{c|[[ZScript special words|is]]}} keyword and {{c|[[GetClass]]}} function}}
== Usage ==
Checks the specified [[actor pointers|pointer]]'s actor class name and see if it matches the specified class name passed to the function.

Note that this function is to be used where an [[DECORATE expressions|expression]] is expected. It is mostly useful when combined with {{c|[[A_JumpIf]]}}.

=== Parameters ===
* ''classname'': the class name to check against.
* ''ptr_select'': the pointer to check its class name. Default is {{c|{{const|AAPTR_DEFAULT}}}}, which points to the caller of the function. See [[actor pointers]].
* ''match_superclass'': if {{c|true}}, enables "parent" class checking. Default is {{c|false}}.

=== Return value ===
The function returns {{c|true}} if the specified pointer's actor class name matches the specified class name, or if the pointer is derived from said specified class if ''match_superclass'' is {{c|true}}. Otherwise, the returned value is {{c|false}}.

==Examples==
When this {{Class|zombieman}} acquires a target, it will check the class name of its target and see if it is the actual {{c|{{Class|PlayerPawn}}}} class, logging to the console {{c|"Target is a protoplayer"}} if it is. If the target is not the {{c|PlayerPawn}} class, it will then check to see if it is derived from said class, logging to the console {{c|"Target is some kind of player"}} if it is. If the target fails both checks, it will simply log {{c|"Targeted something else?"}}.

 ACTOR TestZombie : {{Class|ZombieMan}} replaces {{Class|ZombieMan}}
 {
   States
   {
   See:
     // Jump to SeeClass if target is PlayerPawn
     POSS A 0 [[A_JumpIf]]([[CheckClass]]("{{Class|PlayerPawn}}", {{const|AAPTR_TARGET}}), "SeeClass")
 
     // Jump to SeeSubClass if target is derived from PlayerPawn
     POSS A 0 [[A_JumpIf]]([[CheckClass]]("{{Class|PlayerPawn}}", {{const|AAPTR_TARGET}}, {{const|true}}), "SeeSubClass")
 
     // Target failed both checks. Log the following.
     POSS A 0 [[A_Log]]("Targeted something else?")
     Goto Super::See
 
   SeeClass:
     POSS A 0 [[A_Log]]("Target is a protoplayer")
     Goto Super::See
   SeeSubClass:
     POSS A 0 [[A_Log]]("Target is some kind of player")
     Goto Super::See
   }
 }</text>
    <sha1>pclhxxrnalrg6t65uukj89k5p9cf9kj</sha1>
  </revision>
</page>