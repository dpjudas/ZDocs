<page xmlns="http://www.mediawiki.org/xml/export-0.11/">
  <title>WorldThingDestroyed</title>
  <ns>0</ns>
  <id>9980</id>
  <revision>
    <id>53509</id>
    <parentid>53505</parentid>
    <timestamp>2024-11-01T13:31:18Z</timestamp>
    <contributor>
      <username>Jekyll Grim Payne</username>
      <id>2175</id>
    </contributor>
    <origin>53509</origin>
    <model>wikitext</model>
    <format>text/x-wiki</format>
    <text bytes="1941" sha1="9ttyny22kwowi6izry0x1xwh7oob7lz" xml:space="preserve">'''{{class|StaticEventHandler}}'''

{{c|void '''WorldThingDestroyed''' (WorldEvent ''e'')}}

== Usage ==
An [[Events and handlers|event handler]] virtual function that is called when an [[actor]] is destroyed.

'''Note:''' "destroyed" doesn't mean killed. Reducing an actor's health to 0 kills it, but an actor can only be destroyed if it's completely removed from the game. Most actors don't disappear when killed, and those that do (such as {{class|LostSoul|Doom's Lost Souls}}), only do it when their animation ends, not as soon as their health is reduced to 0.

=== Passed values ===
This event gets a pointer to the {{struct|WorldEvent}} struct and can read the following from it by preceding the value with &lt;code&gt;e.&lt;/code&gt;:
*{{c|Actor '''thing'''}}
:&lt;code&gt;e.thing&lt;/code&gt; is a pointer to the actor that was destroyed.

== Examples ==
This event handler puts all projectiles in an array (which is globally accessible by finding the event handler with [[Events_and_handlers#Functions|EventHandler.Find()]]), and removes them when they're destroyed:
&lt;syntaxhighlight lang="cs"&gt;
class MyEventHandler : EventHandler
{
  array&lt;Actor&gt; allProjectiles;

  override void WorldThingSpawned(WorldEvent e)
  {
    // if the actor has the MISSILE flag, put it in the array:
    if (e.thing.bMissile)
    {
      allProjectiles.Push(e.thing);
    }
  }

  
  override void WorldThingDestroyed(WorldEvent e)
  {
    // when an actor is destroyed, check if it was in the array,
    // and if so, remove it from it:
    int index = allProjectiles.Find(e.thing);
    if (index &lt; allProjectiles.Size())
    {
      allProjectiles.Delete(index);
    }
  }
}

// Example of reading it from elsewhere in the code:
let handler = MyEventHandler(EventHandler.Find('MyEventHandler'));
if (handler)
{
  // do something with handler.allProjectiles here
}
&lt;/syntaxhighlight&gt;

== See also ==
* [[Events and handlers]]

[[Category:ZScript]]
[[Category:Event handlers]]</text>
    <sha1>9ttyny22kwowi6izry0x1xwh7oob7lz</sha1>
  </revision>
</page>