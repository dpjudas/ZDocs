<page xmlns="http://www.mediawiki.org/xml/export-0.11/">
  <title>Distance2D</title>
  <ns>0</ns>
  <id>9041</id>
  <revision>
    <id>52377</id>
    <parentid>52369</parentid>
    <timestamp>2024-04-11T13:09:45Z</timestamp>
    <contributor>
      <username>Jekyll Grim Payne</username>
      <id>2175</id>
    </contributor>
    <origin>52377</origin>
    <model>wikitext</model>
    <format>text/x-wiki</format>
    <text bytes="1142" sha1="657gqfy7q459juy0tc0x200swou28vc" xml:space="preserve">{{ZScriptNote}}

'''{{class|Actor}}'''

{{c|native clearscope double '''Distance2D'''(Actor ''other'') const)}}

==Usage==
This returns the distance from the calling actor to other, disregarding a difference in Z position (if Z difference is wanted, [[Distance3D]] can be used). Unlike something like {{c|(a.pos-b.pos).length()}}, this function is [[Stacked sectors|portal]]-sensitive.

===Parameters===
*{{c|Actor '''other'''}}
:A pointer to the actor we are getting the distance to.

===Return Value===

The distance on an XY plane to the other actor.

==Examples==

This Imp will check if the target is under 128 units away in its [[Tick]] override, and if it is, execute code.
&lt;syntaxhighlight lang="csharp"&gt;
class WaryImp : DoomImp
{

    override void Tick() 
    {
        Super.Tick();
        // if we are less than 128 units away:
        if (target &amp;&amp; Distance2D(target) &lt; 128) 
        {
            // Code could go here to make the imp less aggressive when the target is close, for example
        }
    }
}&lt;/syntaxhighlight&gt;

== See also ==
* [[Distance3D]]
* [[Distance2DSquared]]
* [[Distance3DSquared]]

[[Category:ZScript]]</text>
    <sha1>657gqfy7q459juy0tc0x200swou28vc</sha1>
  </revision>
</page>